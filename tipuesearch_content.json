{"pages":[{"url":"http://mwcraig.github.io/pages/about-me.html","text":"I am a Professor of Physics and Astronomy at Minnesota State University Moorhead , a mid-sized state university in western Minnesota. In principle my research interests are in variable star astronomy; in practice I seem to choose coding on astronomy- related projects over pure science when given the choice. Since we don't offer graduate degrees the focus is on projects that can be wrapped up in a semester or two. When I'm not coding, I enjoy hiking, especially at the North Unit of Theodore Roosevelt National Park and reading science fiction.","tags":"pages","title":"About me"},{"url":"http://mwcraig.github.io/git-and-github-overview.html","text":"Making your first contribution to a github project can be daunting, in part because the number of moving parts and connections between them are high. This post gives a high-level overview of the process. The simplest possible arrangement for making non-trival (i.e. ones you can't make in a browser on the github site) contributions to a repository you do not own is shown below. Each of the ovals in the diagram is a git repository...the same git repository. By convention, one of the copies of the repository on github is treated as the \"official\" repository. There really is nothing special about the repository itself as far as git is concerned. We'll see in a moment that github does treat that copy of the repository differently. The first step in making a contribution to a project hosted on github is to make your own copy, on github, called a fork . As many people as want to can fork a repository, though I'm pretty sure the most common number of forks is zero. Although it is possible to edit files directly on github, it is only desirable in one case: editing a plain text file (or a file in a format like rest or markdown with minimal formatting). In almost every other case you want a copy of the repository on your computer so you can edit, test the changes you have made, and undo anything you break. You get a copy of a remote repository in github by cloning the repository. On the command line of your terminal type something like this: $ git clone https://github.com/YOUR_github_user_name/name_of_the_repository (replace the URL of the repository with the correct one). Once you have a local copy of the repository on your computer you should make a new branch before making modifications. First change directory to the repository, then $ git branch name-your-branch-something-short-and-descriptive and then check out the new branch $ git checkout name-your-branch-something-short-and-descriptive Make your changes, committing them to your local repository along the way. To get those changes to github you need to push them: $ git push Got to your fork of the repository on github and you should see something like this: Click the green button and the owner of the official repository will get a notification to look at your changes and consider merging them.","tags":"misc","title":"Git and GitHub: Overview"},{"url":"http://mwcraig.github.io/best-post-yet.html","text":"This post is really long. ipsum Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Repellendus suscipit eos dolorum fugit magni repudiandae ipsum sint accusantium at natus, animi saepe ipsa ab sunt odit impedit necessitatibus quo facilis. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Earum quae, ut praesentium necessitatibus. Odio, ducimus nobis quidem quam iste officia debitis consequuntur voluptate ad quibusdam. Omnis soluta eius, dolorem quia. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Inventore amet voluptate et id doloribus voluptatibus, ducimus repellendus ipsam quaerat modi alias perferendis illum minus architecto facilis eveniet omnis repellat cumque. Some code Yay python! from __future__ import print_function print ( 'Hello world' )","tags":"misc","title":"Best post yet!"},{"url":"http://mwcraig.github.io/my-second-pelican-post.html","text":"Hopefully this includes a notebook... A dumb notebook In [1]: from __future__ import print_function import numpy as np import matplotlib.pyplot as plt % matplotlib inline Let's make a plot Of some random data. In [2]: # make some points... x = np . random . random ( 100 ) # and a function of them y = x ** 2 # But add some noise y += np . random . randn ( 100 ) / 10 In [4]: plt . plot ( x , y , 'o' ) Out[4]: [<matplotlib.lines.Line2D at 0x1088021d0>] In [ ]:","tags":"misc","title":"My second pelican post"},{"url":"http://mwcraig.github.io/my-first-pelican-post.html","text":"Hello, world! With some code . Maybe syntax highlighted? import this","tags":"misc","title":"My first pelican post"}]}